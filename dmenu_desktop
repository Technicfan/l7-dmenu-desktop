#!/bin/bash

cachedir="$HOME/.cache/l7-dmenu-desktop"
lockfile="$cachedir/lock"
lang=$(echo "$LANG" | awk -F "_" '{print $1}')
filecaches=(
	"$cachedir/files_global"
	"$cachedir/files_global_local"
	"$cachedir/files_local"
	"$cachedir/files_flatpak_global"
	"$cachedir/files_flatpak_local"
)
namecaches=(
    "$cachedir/names_global"
	"$cachedir/names_global_local"
    "$cachedir/names_local"
    "$cachedir/names_flatpak_global"
    "$cachedir/names_flatpak_local"
)
desktopdirs=(
	"/usr/share/applications"
	"/usr/local/share/applications"
	"$HOME/.local/share/applications"
	"/var/lib/flatpak/exports/share/applications"
	"$HOME/.local/flatpak/exports/share/applications"
)

checkrunning()
{
    [ ! -e "$1" ] && mkdir -p "$1"
    if [[ -f "$2" ]]
    then
        echo "Already running!" >&2
        exit 1
    else
        touch "$2"
    fi
}

get_desktop_name()
{
	entry=$(sed -n '/\[Desktop Entry\]/,/^\[/p' "$1")
	if [[ -n $entry ]] && \
	   ! grep -q "^NoDisplay=true" <(echo "${entry[@]}") && \
	   ! grep -q "^Hidden=true" <(echo "${entry[@]}") && \
	     grep -q "^Type=Application" <(echo "${entry[@]}")
	then
		if grep -q "^Name\[$2\]=" <(echo "${entry[@]}")
		then
			name=$(awk -F "=" '{print $2}' <(grep "^Name\[$2\]=" <(echo "${entry[@]}")))
		else
			name=$(awk -F "=" '{print $2}' <(grep "^Name=" <(echo "${entry[@]}")))
		fi
		if [[ -n $name ]]
		then
			echo "$name""; ""$1"
		fi
	fi
}

update_desktop()
{
	if [[ -d "$3" ]]
	then
		if [[ ! -f "$1" || ! -f "$2" ]]
		then
			find "$3" -type f,l -name "*.desktop" > "$1"
			export -f get_desktop_name
			parallel -j12 get_desktop_name :::: "$1" ::: "$4" > "$2"
		elif ! diff -q "$1" <(find "$3" -type f,l -name "*.desktop") >/dev/null 2>&1
		then
			files=$(find "$3" -type f,l -name "*.desktop")
			readarray -t changes < <(diff "$1" <(echo "$files"))
			for change in "${changes[@]}"
			do
				if [[ "$change" = ">"* ]]
				then
					file="${change//> /}"
					get_desktop_name "$file" "$4" >> "$2"
				elif [[ "$change" = "<"* ]]
				then
					file="$(sed 's/\//\\\//g' <<<"${change//< /}")"
					sed -i "/$file/d" "$2"
				fi
			done
			echo "$files" > "$1"
		fi
		awk -F "; " '{print $1}' "$2"
	fi
}

checkrunning "$cachedir" "$lockfile"
for i in "${!desktopdirs[@]}"
do
    update_desktop "${filecaches[i]}" "${namecaches[i]}" "${desktopdirs[i]}" "$lang" &
    pids+=($!)
done
for pid in "${pids[@]}"
do
    wait "$pid"
done
rm "$lockfile"